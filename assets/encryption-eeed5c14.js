import{n as o,Q as C,d as z,o as g,f as A,k as a,w as _,g as b,i as l,x as p,c as E,l as U,t as H,W as D,F as N,y as R,X as K,Y as O,z as j}from"./index-9a786956.js";import{c as r}from"./index-f387c2e0.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./___vite-browser-external_commonjs-proxy-07818cd7.js";function Y(h,{defaultValue:c,defaultErrorMessage:i="Unknown error"}={}){const u=o(),n=o();return C(()=>{try{u.value=void 0,n.value=h()}catch(s){u.value=s instanceof Error?s.message:s?.toString()??i,n.value=c}}),[n,u]}const F={flex:"","gap-3":""},I={flex:"","flex-1":"","flex-col":"","gap-2":""},P={flex:"","gap-3":""},L={flex:"","flex-1":"","flex-col":"","gap-2":""},W=z({__name:"encryption",setup(h){const c={AES:r.AES,TripleDES:r.TripleDES,Rabbit:r.Rabbit,RC4:r.RC4},i=o("Lorem ipsum dolor sit amet"),u=o("AES"),n=o("my secret key"),s=o("Text"),[V,k]=Y(()=>c[u.value].encrypt(i.value,s.value==="Text"?n.value:r.enc.Hex.parse(n.value),{iv:r.enc.Hex.parse("")}).toString(),{defaultValue:"",defaultErrorMessage:"Unable to cypher your text"}),y=o("U2FsdGVkX1/EC3+6P5dbbkZ3e1kQ5o2yzuU0NHTjmrKnLBEwreV489Kr0DIB+uBs"),m=o("AES"),v=o("my secret key"),x=o("Text"),[B,S]=Y(()=>c[m.value].decrypt(y.value,x.value==="Text"?v.value:r.enc.Hex.parse(v.value),{iv:r.enc.Hex.parse("")}).toString(r.enc.Utf8),{defaultValue:"",defaultErrorMessage:"Unable to decrypt your text"});return(M,t)=>{const d=R,f=K,T=O,w=j;return g(),A(N,null,[a(w,{title:"Encrypt"},{default:_(()=>[b("div",F,[a(d,{value:l(i),"onUpdate:value":t[0]||(t[0]=e=>p(i)?i.value=e:null),label:"Your text:",placeholder:"The string to cypher",rows:"4",multiline:"","raw-text":"",monospace:"",autosize:"","flex-1":""},null,8,["value"]),b("div",I,[a(d,{value:l(n),"onUpdate:value":t[1]||(t[1]=e=>p(n)?n.value=e:null),label:"Your secret key:",clearable:"","raw-text":""},null,8,["value"]),a(f,{value:l(s),"onUpdate:value":t[2]||(t[2]=e=>p(s)?s.value=e:null),label:"Key encoding","flex-1":"",placeholder:"Select the key encoding...",options:[{label:"Plain Text",value:"Text"},{label:"Hexadecimal Text",value:"Hex"}]},null,8,["value"]),a(f,{value:l(u),"onUpdate:value":t[3]||(t[3]=e=>p(u)?u.value=e:null),label:"Encryption algorithm:",options:Object.keys(c).map(e=>({label:e,value:e}))},null,8,["value","options"])])]),l(k)?(g(),E(T,{key:0,type:"error","mt-12":"",title:"Error while cyphering"},{default:_(()=>[U(H(l(k)),1)]),_:1})):D("",!0),a(d,{label:"Your text encrypted:",value:l(V),rows:"3",placeholder:"Your string hash",multiline:"",monospace:"",readonly:"",autosize:"","mt-5":""},null,8,["value"])]),_:1}),a(w,{title:"Decrypt"},{default:_(()=>[b("div",P,[a(d,{value:l(y),"onUpdate:value":t[4]||(t[4]=e=>p(y)?y.value=e:null),label:"Your encrypted text:",placeholder:"The string to cypher",rows:"4",multiline:"","raw-text":"",monospace:"",autosize:"","flex-1":""},null,8,["value"]),b("div",L,[a(d,{value:l(v),"onUpdate:value":t[5]||(t[5]=e=>p(v)?v.value=e:null),label:"Your secret key:",clearable:"","raw-text":""},null,8,["value"]),a(f,{value:l(x),"onUpdate:value":t[6]||(t[6]=e=>p(x)?x.value=e:null),label:"Key encoding","flex-1":"",placeholder:"Select the key encoding...",options:[{label:"Plain Text",value:"Text"},{label:"Hexadecimal Text",value:"Hex"}]},null,8,["value"]),a(f,{value:l(m),"onUpdate:value":t[7]||(t[7]=e=>p(m)?m.value=e:null),label:"Encryption algorithm:",options:Object.keys(c).map(e=>({label:e,value:e}))},null,8,["value","options"])])]),l(S)?(g(),E(T,{key:0,type:"error","mt-12":"",title:"Error while decrypting"},{default:_(()=>[U(H(l(S)),1)]),_:1})):(g(),E(d,{key:1,label:"Your decrypted text:",value:l(B),placeholder:"Your string hash",rows:"3",multiline:"",monospace:"",readonly:"",autosize:"","mt-5":""},null,8,["value"]))]),_:1})],64)}}});export{W as default};
